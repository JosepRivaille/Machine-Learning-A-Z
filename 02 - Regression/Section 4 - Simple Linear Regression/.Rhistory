plot(x = xAxis, y = plotDataMatrix[,"Cost"], xlab = "Information Weight", ylab = "Cost", type = "o")
plot(x = xAxis, y = plotDataMatrix[,"Information"], xlab = "Information Weight", ylab = "Information", type = "o")
plot(x = xAxis, y = plotDataMatrix[,"Time"], xlab = "Information Weight", ylab = "Time(ms)", type = "o")
plotData <- c()
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.8))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.8))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.5))[2:4])
plotDataMatrix <- matrix(plotData, ncol = 3, nrow = 10, byrow = TRUE)
xAxis <- seq(1.0, 2.8, by = 0.2)
plotData <- c()
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.8))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.8))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.5))[2:4])
plotDataMatrix <- matrix(plotData, ncol = 3, nrow = 11, byrow = TRUE)
xAxis <- seq(1.0, 2.8, by = 0.2)
rownames(plotDataMatrix) <- xAxis
colnames(plotDataMatrix) <- c("Cost", "Information", "Time")
plot(x = xAxis, y = plotDataMatrix[,"Cost"], xlab = "Information Weight", ylab = "Cost", type = "o")
plotData <- c()
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.8))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.8))[2:4])
plotDataMatrix <- matrix(plotData, ncol = 3, nrow = 11, byrow = TRUE)
xAxis <- seq(1.0, 2.8, by = 0.2)
rownames(plotDataMatrix) <- xAxis
colnames(plotDataMatrix) <- c("Cost", "Information", "Time")
plot(x = xAxis, y = plotDataMatrix[,"Cost"], xlab = "Information Weight", ylab = "Cost", type = "o")
plot(x = xAxis, y = plotDataMatrix[,"Information"], xlab = "Information Weight", ylab = "Information", type = "o")
plot(x = xAxis, y = plotDataMatrix[,"Time"], xlab = "Information Weight", ylab = "Time(ms)", type = "o")
colMeans(subset(heuristic, Weight == 2.5))["Cost"]
boxplot(operatorsCost)
operatorsCost <- read.table(paste(filePath, "operators/Cost.txt", sep = ""), header = TRUE, sep = "\t")
operatorsCost
colMeans(operatorsCost)
colMeans(operatorsCost["Switch"])
colMeans(subset(heuristic, Weight == 2.5))["Cost"]
colMeans(operatorsCost["Switch"])
colMeans(subset(heuristic, Weight == 2.5))["Cost"] / colMeans(operatorsCost["Switch"])
operatorsCost
colMeans(subset(heuristic, Weight == 2.5))["Cost"] / colMeans(operatorsCost["Switch"])
dataCentersHC <- read.table(paste(filePath, "dataCenters/HillClimbing.txt", sep = ""), header = TRUE, sep = "\t")
dataCentersSA <- read.table(paste(filePath, "dataCenters/SimulatedAnnealing.txt", sep = ""), header = TRUE, sep = "\t")
dataCentersHC
dataCentersHCCost <- colMeans(subset(dataCentersHC, select = c("Cost1", "Cost2", "Cost3", "Cost4")))
dataCentersHCTime <- colMeans(subset(dataCentersHC, select = c("Time1", "Time2", "Time3", "Time4")))
dataCentersHCUses <- colMeans(subset(dataCentersHC, select = c("UC1", "UC2", "UC3", "UC4")))
dataCentersSACost <- colMeans(subset(dataCentersSA, select = c("Cost1", "Cost2", "Cost3", "Cost4")))
dataCentersSATime <- colMeans(subset(dataCentersSA, select = c("Time1", "Time2", "Time3", "Time4")))
dataCentersSAUses <- colMeans(subset(dataCentersSA, select = c("UC1", "UC2", "UC3", "UC4")))
xAxis = c(4, 6, 8, 10)
plot(x = xAxis, y = dataCentersHCCost, xlab = "Centers", ylab = "Cost", type = "o")
plot(x = xAxis, y = dataCentersHCTime, xlab = "Centers", ylab = "Time(ms)", type = "o")
plot(x = xAxis, y = dataCentersHCUses, xlab = "Centers", ylab = "Used centers", type = "o")
plot(x = xAxis, y = dataCentersHCTime, xlab = "Centers", ylab = "Time(ms)", type = "o")
plot(x = xAxis, y = dataCentersHCCost, xlab = "Centers", ylab = "Cost", type = "o")
dataCentersHC <- read.table(paste(filePath, "dataCenters/HillClimbing.txt", sep = ""), header = TRUE, sep = "\t")
dataCentersHC
plotDataMatrix
plotDataMatrix <- matrix(plotData, ncol = 3, nrow = 11, byrow = TRUE)
xAxis <- seq(1.0, 2.8, by = 0.2)
plotData <- c()
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.8))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.8))[2:4])
plotDataMatrix <- matrix(plotData, ncol = 3, nrow = 11, byrow = TRUE)
xAxis <- seq(1.0, 2.8, by = 0.2)
rownames(plotDataMatrix) <- xAxis
colnames(plotDataMatrix) <- c("Cost", "Information", "Time")
plotDataMatrix
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
plotData <- c()
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.8))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.8))[2:4])
plotDataMatrix <- matrix(plotData, ncol = 3, nrow = 11, byrow = TRUE)
plotDataMatrix <- matrix(plotData, ncol = 3, nrow = 10, byrow = TRUE)
xAxis <- seq(1.0, 2.8, by = 0.2)
rownames(plotDataMatrix) <- xAxis
colnames(plotDataMatrix) <- c("Cost", "Information", "Time")
plotDataMatrix
dataCentersHC <- read.table(paste(filePath, "dataCenters/HillClimbing.txt", sep = ""), header = TRUE, sep = "\t")
dataCentersHC
dataCentersHC <- read.table(paste(filePath, "dataCenters/HillClimbing.txt", sep = ""), header = TRUE, sep = "\t")
dataCentersSA <- read.table(paste(filePath, "dataCenters/SimulatedAnnealing.txt", sep = ""), header = TRUE, sep = "\t")
dataCentersSA
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
heuristic
plotDataMatrix
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
plotData <- c()
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.8))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.8))[2:4])
plotDataMatrix <- matrix(plotData, ncol = 3, nrow = 10, byrow = TRUE)
xAxis <- seq(1.0, 2.8, by = 0.2)
rownames(plotDataMatrix) <- xAxis
colnames(plotDataMatrix) <- c("Cost", "Information", "Time")
plotDataMatrix
plotDataMatrix <- matrix(plotData, ncol = 3, nrow = 10, byrow = TRUE)
xAxis <- seq(1.0, 2.8, by = 0.2)
rownames(plotDataMatrix) <- xAxis
colnames(plotDataMatrix) <- c("Cost", "Information", "Time")
heuristic
plotDataMatrix
colMeans(subset(heuristic, Weight == 2.5))
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
plotData <- c()
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.8))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.8))[2:4])
plotDataMatrix <- matrix(plotData, ncol = 3, nrow = 10, byrow = TRUE)
xAxis <- seq(1.0, 2.8, by = 0.2)
rownames(plotDataMatrix) <- xAxis
colnames(plotDataMatrix) <- c("Cost", "Information", "Time")
plot(x = xAxis, y = plotDataMatrix[,"Cost"], xlab = "Information Weight", ylab = "Cost", type = "o")
plot(x = xAxis, y = plotDataMatrix[,"Information"], xlab = "Information Weight", ylab = "Information", type = "o")
plot(x = xAxis, y = plotDataMatrix[,"Time"], xlab = "Information Weight", ylab = "Time(ms)", type = "o")
colMeans(subset(heuristic, Weight == 2.5))["Cost"] / colMeans(operatorsCost["Switch"])
colMeans(subset(heuristic, Weight == 2.5))
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
colMeans(subset(heuristic, Weight == 2.5))
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
colMeans(subset(heuristic, Weight == 2.5))
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
colMeans(subset(heuristic, Weight == 2.5))
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
colMeans(subset(heuristic, Weight == 2.5))
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
colMeans(subset(heuristic, Weight == 2.5))
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
colMeans(subset(heuristic, Weight == 2.5))
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
colMeans(subset(heuristic, Weight == 2.5))
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
colMeans(subset(heuristic, Weight == 2.5))
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
colMeans(subset(heuristic, Weight == 2.5))
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
colMeans(subset(heuristic, Weight == 2.5))
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
hist3D(z=plotDataMatrix, border="black", xaxt = "n", yaxt = "n", xlab = "K", ylab = "Lambda", zlab = "Cost")
hist3D(z=plotDataMatrix, border="black", xaxt = "n", yaxt = "n", xlab = "K", ylab = "Lambda", zlab = "Cost")
hist3D(z=plotDataMatrix, border="black", xaxt = "n", yaxt = "n", xlab = "K", ylab = "Lambda", zlab = "Cost")
hist3D(z=plotDataMatrix, border="black", xaxt = "n", yaxt = "n", xlab = "K", ylab = "Lambda", zlab = "Cost")
hist3D(z=plotDataMatrix, border="black", xaxt = "n", yaxt = "n", xlab = "K", ylab = "Lambda", zlab = "Cost")
plotdev(theta = -65, phi = 30)
image2D(z=plotDataMatrix, border="black", xaxt="n", yaxt="n", xlab = "K", ylab = "Lambda")
iterations1000 <- colMeans(subset(parametersCost, Total.iterations == 1000))["Cost"]
iterations2000 <- colMeans(subset(parametersCost, Total.iterations == 2000))["Cost"]
iterations3000 <- colMeans(subset(parametersCost, Total.iterations == 3000))["Cost"]
iterations4000 <- colMeans(subset(parametersCost, Total.iterations == 4000))["Cost"]
iterations5000 <- colMeans(subset(parametersCost, Total.iterations == 5000))["Cost"]
iterations6000 <- colMeans(subset(parametersCost, Total.iterations == 6000))["Cost"]
iterations7000 <- colMeans(subset(parametersCost, Total.iterations == 7000))["Cost"]
iterations8000 <- colMeans(subset(parametersCost, Total.iterations == 8000))["Cost"]
iterations9000 <- colMeans(subset(parametersCost, Total.iterations == 9000))["Cost"]
iterations10000 <- colMeans(subset(parametersCost, Total.iterations == 10000))["Cost"]
iterations <- c(iterations1000, iterations2000, iterations3000, iterations4000, iterations5000,
iterations6000, iterations7000, iterations8000, iterations9000, iterations10000)
plot(seq(from = 1000, to = 10000, by = 1000), iterations)
parametersTime <- read.table(paste(filePath, "parameters/Time.txt", sep = ""), header = TRUE, sep = "\t")
parametersCost <- read.table(paste(filePath, "parameters/Cost.txt", sep = ""), header = TRUE, sep = "\t")
parametersInfo <- read.table(paste(filePath, "parameters/Information.txt", sep = ""), header = TRUE, sep = "\t")
plotData <- c()
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 1))["Cost"])
plotDataMatrix <- matrix(plotData, ncol = 4, nrow = 4, byrow = TRUE)
rownames(plotDataMatrix) <- c(1, 5, 25, 125)
colnames(plotDataMatrix) <- c(0.001, 0.01, 0.1, 1)
hist3D(z=plotDataMatrix, border="black", xaxt = "n", yaxt = "n", xlab = "K", ylab = "Lambda", zlab = "Cost")
plotdev(theta = -65, phi = 30)
image2D(z=plotDataMatrix, border="black", xaxt="n", yaxt="n", xlab = "K", ylab = "Lambda")
hist3D(z=plotDataMatrix, border="black", xaxt = "n", yaxt = "n", xlab = "K", ylab = "Lambda", zlab = "Cost")
incrementsTime <- read.table(paste(filePath, "increments/fileTime.txt", sep = ""), header = FALSE, sep = "\t")
incrementsCost <- read.table(paste(filePath, "increments/fileCost.txt", sep = ""), header = FALSE, sep = "\t")
incrementsInfo <- read.table(paste(filePath, "increments/fileInfo.txt", sep = ""), header = FALSE, sep = "\t")
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
incrementsHC4 <- c(colMeans(subset(incrementsHC, Centers == 4))["Time"])
filePath <- "/Users/josepdecidrodriguez/Dropbox/FIB/IA/Prac/LocalSearch/experiments/"
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
incrementsHC4 <- c(colMeans(subset(incrementsHC, Centers == 4))["Time"])
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
incrementsHC4 <- c(colMeans(subset(incrementsHC, Centers == 4))["Time"])
incrementsHC6 <- c(colMeans(subset(incrementsHC, Centers == 6))["Time"])
incrementsHC8 <- c(colMeans(subset(incrementsHC, Centers == 8))["Time"])
incrementsHC10 <- c(colMeans(subset(incrementsHC, Centers == 10))["Time"])
incrementsHC12 <- c(colMeans(subset(incrementsHC, Centers == 12))["Time"])
incrementsHC <- c(incrementsHC4,incrementsHC6,incrementsHC8,incrementsHC10,incrementsHC12)
plot(x = c(4,6,8,10,12), y = incrementsHC, xlab = "Number of sensors", ylab = "Time", type = "b")
colSums(incrementsHC["Time"])
incrementsHC <- c(incrementsHC4,incrementsHC6,incrementsHC8,incrementsHC10,incrementsHC12)
colSums(incrementsHC["Time"])
incrementsHC
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
incrementsHC
colSums(incrementsHC["Time"])
17213984 * 60
17213.984 / 60
17213.984 / 3600
colSums(incrementsHC["Time"])
incrementsHC
17213.984 / 3600
colSums(subset(incrementsHC, Centers != 12)["Time"])
7485.864 / 3600
7485.864 / 3600 / 2
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.4))[2:4])
parametersTime <- read.table(paste(filePath, "parameters/Time.txt", sep = ""), header = TRUE, sep = "\t")
parametersCost <- read.table(paste(filePath, "parameters/Cost.txt", sep = ""), header = TRUE, sep = "\t")
parametersInfo <- read.table(paste(filePath, "parameters/Information.txt", sep = ""), header = TRUE, sep = "\t")
plotData <- c()
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 1))["Cost"])
plotDataMatrix <- matrix(plotData, ncol = 4, nrow = 4, byrow = TRUE)
rownames(plotDataMatrix) <- c(1, 5, 25, 125)
colnames(plotDataMatrix) <- c(0.001, 0.01, 0.1, 1)
hist3D(z=plotDataMatrix, border="black", xaxt = "n", yaxt = "n", xlab = "K", ylab = "Lambda", zlab = "Cost")
plotdev(theta = -65, phi = 30)
image2D(z=plotDataMatrix, border="black", xaxt="n", yaxt="n", xlab = "K", ylab = "Lambda")
hist3D(z=plotDataMatrix, border="black", xaxt = "n", yaxt = "n", xlab = "K", ylab = "Lambda", zlab = "Cost")
plotdev(theta = -65, phi = 30)
heuristic <- read.table(paste(filePath, "heuristic/Data.txt", sep = ""), header = TRUE, sep = "\t")
plotData <- c()
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 1.8))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.0))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.2))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.4))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.6))[2:4])
plotData <- c(plotData, colMeans(subset(heuristic, Weight == 2.8))[2:4])
plotDataMatrix <- matrix(plotData, ncol = 3, nrow = 10, byrow = TRUE)
xAxis <- seq(1.0, 2.8, by = 0.2)
rownames(plotDataMatrix) <- xAxis
colnames(plotDataMatrix) <- c("Cost", "Information", "Time")
plot(x = xAxis, y = plotDataMatrix[,"Cost"], xlab = "Information Weight", ylab = "Cost", type = "o")
plot(x = xAxis, y = plotDataMatrix[,"Information"], xlab = "Information Weight", ylab = "Information", type = "o")
plot(x = xAxis, y = plotDataMatrix[,"Time"], xlab = "Information Weight", ylab = "Time(ms)", type = "o")
colMeans(subset(heuristic, Weight == 2.5))["Cost"] / colMeans(operatorsCost["Switch"])
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
filePath <- "/Users/josepdecidrodriguez/Dropbox/FIB/IA/Prac/LocalSearch/experiments/"
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
colSums(incrementsHC["time"])
colSums(incrementsHC["time"])
subset(incrementsHC)["Time"]
sumCols(subset(incrementsHC)["Time"])
colSums(subset(incrementsHC)["Time"])
17213984 / 1000
/3600
17213.98/3600
parametersTime <- read.table(paste(filePath, "parameters/Time.txt", sep = ""), header = TRUE, sep = "\t")
parametersCost <- read.table(paste(filePath, "parameters/Cost.txt", sep = ""), header = TRUE, sep = "\t")
parametersInfo <- read.table(paste(filePath, "parameters/Information.txt", sep = ""), header = TRUE, sep = "\t")
plotData <- c()
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 0.001))["Cost"])
filePath <- "/Users/josepdecidrodriguez/Dropbox/FIB/IA/Prac/LocalSearch/experiments/"
parametersTime <- read.table(paste(filePath, "parameters/Time.txt", sep = ""), header = TRUE, sep = "\t")
parametersCost <- read.table(paste(filePath, "parameters/Cost.txt", sep = ""), header = TRUE, sep = "\t")
parametersInfo <- read.table(paste(filePath, "parameters/Information.txt", sep = ""), header = TRUE, sep = "\t")
plotData <- c()
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 1))["Cost"])
plotDataMatrix <- matrix(plotData, ncol = 4, nrow = 4, byrow = TRUE)
rownames(plotDataMatrix) <- c(1, 5, 25, 125)
colnames(plotDataMatrix) <- c(0.001, 0.01, 0.1, 1)
hist3D(z=plotDataMatrix, border="black", xaxt = "n", yaxt = "n", xlab = "K", ylab = "Lambda", zlab = "Cost")
plotdev(theta = -65, phi = 30)
image2D(z=plotDataMatrix, border="black", xaxt="n", yaxt="n", xlab = "K", ylab = "Lambda")
iterations1000 <- colMeans(subset(parametersCost, Total.iterations == 1000))["Cost"]
library("3dplot")
library("plot3D")
iterations <- c(iterations1000, iterations2000, iterations3000, iterations4000, iterations5000,
iterations6000, iterations7000, iterations8000, iterations9000, iterations10000)
plot(seq(from = 1000, to = 10000, by = 1000), iterations)
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
hist3D(z=plotDataMatrix, border="black", xaxt = "n", yaxt = "n", xlab = "K", ylab = "Lambda", zlab = "Cost")
plotData <- c()
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 1 & lambda == 1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 5 & lambda == 1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 25 & lambda == 1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 0.001))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 0.01))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 0.1))["Cost"])
plotData <- c(plotData, colMeans(subset(parametersCost, k == 125 & lambda == 1))["Cost"])
plotDataMatrix <- matrix(plotData, ncol = 4, nrow = 4, byrow = TRUE)
rownames(plotDataMatrix) <- c(1, 5, 25, 125)
colnames(plotDataMatrix) <- c(0.001, 0.01, 0.1, 1)
hist3D(z=plotDataMatrix, border="black", xaxt = "n", yaxt = "n", xlab = "K", ylab = "Lambda", zlab = "Cost")
plotdev(theta = -65, phi = 30)
image2D(z=plotDataMatrix, border="black", xaxt="n", yaxt="n", xlab = "K", ylab = "Lambda")
incrementsHC <- read.table(paste(filePath, "increments/DataHC.txt", sep = ""), header = TRUE, sep = "\t")
incrementsHC4 <- c(colMeans(subset(incrementsHC, Centers == 4))["Time"])
incrementsHC6 <- c(colMeans(subset(incrementsHC, Centers == 6))["Time"])
incrementsHC8 <- c(colMeans(subset(incrementsHC, Centers == 8))["Time"])
incrementsHC10 <- c(colMeans(subset(incrementsHC, Centers == 10))["Time"])
incrementsHC12 <- c(colMeans(subset(incrementsHC, Centers == 12))["Time"])
incrementsHC <- c(incrementsHC4,incrementsHC6,incrementsHC8,incrementsHC10,incrementsHC12)
plot(x = c(4,6,8,10,12), y = incrementsHC, xlab = "Number of sensors", ylab = "Time", type = "b")
initialStateCost <- read.table(paste(filePath, "initialStates/Cost.txt", sep = ""), header = TRUE, sep = "\t")
initialStateExps <- read.table(paste(filePath, "initialStates/Expansions.txt", sep = ""), header = TRUE, sep = "\t")
initialStateInfo <- read.table(paste(filePath, "initialStates/Information.txt", sep = ""), header = TRUE, sep = "\t")
initialStateTime <- read.table(paste(filePath, "initialStates/Time.txt", sep = ""), header = TRUE, sep = "\t")
colMeans(initialStateCost)
colMeans(initialStateExps)
colMeans(initialStateTime)
boxplot(initialStateCost)
boxplot(initialStateExps)
boxplot(initialStateTime)
parametersTime <- read.table(paste(filePath, "parameters/Time.txt", sep = ""), header = TRUE, sep = "\t")
incrementsHC6 <- c(colMeans(subset(incrementsHC, Centers == 6))["Time"])
notes <- read.table(paste(filePath, "~/Downloads/notes.csv", sep = ""), header = TRUE, sep = "\t")
notes <- read.table(paste("~/Downloads/notes.csv", sep = ""), header = TRUE, sep = "\t")
notes
notes <- read.table(paste("~/Downloads/notes.csv", sep = ""), header = TRUE, sep = "\t")
notes <- read.table(paste("~/Downloads/notes.csv", sep = ""), header = TRUE, sep = "\t")
notes <- read.table(paste("~/Downloads/notes-idi.csv", sep = ""), header = TRUE, sep = "\t")
notes
notes <- read.table(paste("~/Downloads/notes-idi.csv", sep = ""), header = TRUE, sep = ",")
notes
colMeans(notes["Nota-Parcial"])
colMeans(notes["X.12"])
notes(2:)
notes(2)
notes(2)
notes[2]
notes[2][2]
notes[2:2]
notes[2,2]
notes[2, nrow(notes)]
notes[1, nrow(notes)]
notes <- read.table(paste("~/Downloads/notes-idi.csv", sep = ""), header = TRUE, sep = ",")
notes[1, nrow(notes)]
nrow(notes)
notes <- read.table(paste("~/Downloads/notes-idi.csv", sep = ""), header = TRUE, sep = ",")
notes
notes
notes <- read.table(paste("~/Downloads/notes-idi.csv", sep = ""), header = TRUE, sep = ",")
notes <- read.table(paste("~/Downloads/notes-idi.csv", sep = ""), header = TRUE, sep = ",")
notes <- read.table(paste("~/Downloads/notes-idi.csv", sep = ""), header = F, sep = ",")
notes <- read.table(paste("~/Downloads/notes-idi.xml", sep = ""), header = F, sep = ",")
notes <- read.table(paste("~/Downloads/nodes-idi.xml", sep = ""), header = F, sep = ",")
require(XML)
notes <- read.table(paste("~/Downloads/notes-idi.xml", sep = ""), header = F, sep = ",")
csv
notes <- read.table(paste("~/Downloads/notes-idi.csv", sep = ""), header = F, sep = ",")
notes <- read.table(paste("~/Downloads/notes-idi.csv", sep = ""), header = F, sep = ",")
read.table(paste(filePath, "~/Downloads/notes-idi-r.xlsx", sep = ""), header = TRUE, sep = "\t")
read.table(paste(filePath, "~/Downloads/notes-idi-r.xlsx", sep = ""), header = TRUE, sep = "\t")
read.table(paste("~/Downloads/notes-idi-r.xlsx", sep = ""), header = TRUE, sep = "\t")
read.table(paste("~/Downloads/notes-idi-r.xlsx", sep = ""), header = TRUE, sep = "\t")
read.table(paste("~/Downloads/notes-idi-r.xlsx", sep = "/"), header = TRUE, sep = "\t")
read.table(paste("~/Downloads/notes-idi-r.xlsx", sep = "/"), header = TRUE, sep = "\t")
read.table("~/Downloads/notes-idi-r.xlsx", sep = "/"), header = TRUE, sep = "\t")
read.table(paste("~/Downloads/notes-idi-r.xlsx", sep = "/"), header = TRUE, sep = "\t")
read.table(paste("~/Downloads/notes-idi-r.xlsx", sep = ""), header = TRUE, sep = "\t")
read.table(paste("~/Downloads/notes-idi-r.xlsx", sep = ""), header = TRUE, sep = "\t")
read.table(paste("~/Downloads/notes-idi-r.xlsx", sep = ""), header = TRUE, sep = "/")
read.table(paste("~/Downloads/notes-idi-r.xlsx", sep = ""), header = TRUE, sep = ",")
read.table(paste("~/Downloads/notes-idi-r.xlsx", sep = ""), header = TRUE, sep = ",")
read.table(paste("~/Downloads/notes-idi-r.csv", sep = ""), header = TRUE, sep = ",")
read.table(paste("~/Downloads/notes-idi-r.csv", sep = ""), header = TRUE, sep = ",")
data[14]
data <- read.table(paste("~/Downloads/notes-idi-r.csv", sep = ""), header = TRUE, sep = ",")
data[14]
data['Nota.Parcial']
data.headers
data.columns.values.tolist()
data <- read.table(paste("~/Downloads/notes-idi-r.csv", sep = ""), header = TRUE, sep = ",")
data.columns.values.tolist()
demo()
print('Hello world')
print(123  "Hello world")
dataset = read.csv('Salary_Data.csv')
setwd("~/Projects/MachineLearningAZ/02 - Regression/Section 4 - Simple Linear Regression")
dataset = read.csv('Salary_Data.csv')
dataset = read.csv('Salary_Data.csv')
library("caTools")
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(formula = Salary ~ YearsExperience, data = training_set)
y_pred = predict(regressor, newdata = test_set)
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary), colour = "red") +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)), colour = "blue") +
ggtitle("Salary vs Experience (Training set)") +
xlab("Years of experience") +
ylab("Salary")
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary), colour = "red") +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)), colour = "blue") +
ggtitle("Salary vs Experience (Test set)") +
xlab("Years of experience") +
ylab("Salary")
View(dataset)
View(dataset)
